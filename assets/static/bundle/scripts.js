var Interactor=function(config){this.__init__(config)};Interactor.prototype={__init__:function(config){var interactor=this;return interactor.interactions="boolean"!=typeof config.interactions||config.interactions,interactor.interactionElements=!0===Array.isArray(config.interactionElements)?config.interactionElements:["interaction"],interactor.interactionEvents=!0===Array.isArray(config.interactionEvents)?config.interactionEvents:["mouseup","touchend"],interactor.endpoint="string"==typeof config.endpoint?config.endpoint:"/interactions",interactor.async="boolean"!=typeof config.async||config.async,interactor.debug="boolean"!=typeof config.debug||config.debug,interactor.records=[],interactor.session={},interactor.loadTime=new Date,interactor.__initializeSession__(),interactor.__bindEvents__(),interactor},__bindEvents__:function(){var interactor=this;if(!0===interactor.interactions)for(var i=0;i<interactor.interactionEvents.length;i++)for(var ev=interactor.interactionEvents[i],elIndex=0;elIndex<interactor.interactionElements.length;elIndex++){var className=interactor.interactionElements[elIndex],targets=document.getElementsByClassName(className);if(targets)for(var j=0;j<targets.length;j++){var targetElement=targets[j],interationArg=targetElement.getAttributeNode("interactor-arg"),eventListener={className:className,content:interationArg?interationArg.value:"",handleEvent:function(e){e.stopPropagation(),interactor.__addInteraction__(e,this.className,this.content)}};targets[j].removeEventListener(ev,eventListener),targets[j].addEventListener(ev,eventListener)}}return window.onbeforeunload=function(e){interactor.__sendInteractions__()},interactor},__addInteraction__:function(e,type,arg){var interactor=this,interaction={type:type,event:e.type,targetTag:e.target.nodeName,targetClasses:e.target.className,content:arg,clientPosition:{x:e.clientX,y:e.clientY},screenPosition:{x:e.screenX,y:e.screenY},createdAt:new Date};return interactor.records.push(interaction),interactor.debug&&(interactor.__closeSession__(),console.log("Session:\n",interactor.session)),interactor},__initializeSession__:function(){var interactor=this;return interactor.session={loadTime:interactor.loadTime,unloadTime:new Date,language:window.navigator.language,platform:window.navigator.platform,port:window.location.port,clientStart:{name:window.navigator.appVersion,innerWidth:window.innerWidth,innerHeight:window.innerHeight,outerWidth:window.outerWidth,outerHeight:window.outerHeight},page:{location:window.location.pathname,href:window.location.href,origin:window.location.origin,title:document.title},endpoint:interactor.endpoint},interactor},__closeSession__:function(){var interactor=this;return interactor.session.unloadTime=new Date,interactor.session.interactions=interactor.records,interactor.session.clientEnd={name:window.navigator.appVersion,innerWidth:window.innerWidth,innerHeight:window.innerHeight,outerWidth:window.outerWidth,outerHeight:window.outerHeight},interactor},__sendInteractions__:function(){var interactor=this,xhr=new XMLHttpRequest;return interactor.__closeSession__(),xhr.open("POST",interactor.endpoint,interactor.async),xhr.setRequestHeader("Content-Type","application/json; charset=UTF-8"),xhr.send(JSON.stringify(interactor.session)),interactor}},angular.module("storefrontApp").factory("authService",["storefrontApp.mainContext","$auth","$httpParamSerializerJQLike","$interpolate","$rootScope","storefront.corporateAccountApi",function(mainContext,$auth,$httpParamSerializerJQLike,$interpolate,$rootScope,corporateAccountApi){function changeAuth(results){authContext.userId=results.id,authContext.roles=results.roles,authContext.permissions=results.permissions,authContext.userLogin=results.userName,authContext.fullName=results.userLogin,authContext.isAuthenticated=null!=results.userName,authContext.userType=results.userType,authContext.isAdministrator=results.isAdministrator,authContext.permissions&&(authContext.permissions=_.map(authContext.permissions,function(x){return $interpolate(x)(authContext)}))}var authContext={userId:null,userLogin:null,fullName:null,userType:null,roles:null,permissions:null,isAuthenticated:!1};return authContext.login=function(login,password){return $auth.login($httpParamSerializerJQLike({userName:login,password:password,grant_type:"password"}),{headers:{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"}})},authContext.fillAuthData=function(){return corporateAccountApi.getUser({userName:mainContext.customer.userName},function(result){changeAuth(result),$rootScope.$broadcast("loginStatusChanged",authContext)},function(error){})},authContext.checkPermission=function(permission,securityScopes){var hasPermission=authContext.isAdministrator;return!hasPermission&&permission&&(permission=permission.trim(),!(hasPermission=$.inArray(permission,authContext.permissions)>-1)&&securityScopes&&("string"==typeof securityScopes||angular.isArray(securityScopes))&&(securityScopes=angular.isArray(securityScopes)?securityScopes:securityScopes.split(","),hasPermission=_.some(securityScopes,function(x){var permissionWithScope=permission+":"+x;return $.inArray(permissionWithScope,authContext.permissions)>-1}))),hasPermission},authContext}]).constant("tokenExpirationName","platform_access_token_expiration_time").config(["$authProvider","$provide","apiBaseUrl",function($authProvider,$provide,apiBaseUrl){$authProvider.loginUrl=apiBaseUrl+"Token",$authProvider.tokenName="access_token",$authProvider.tokenPrefix="platform",$authProvider.oauth2({name:"platform",clientId:"web"}),$provide.decorator("SatellizerShared",["$delegate","tokenExpirationName",function($delegate,tokenExpirationName){var service=$delegate,originalSetToken=service.setToken;return service.setToken=function(response){originalSetToken.apply(service,arguments);var expirationTime=Date.parse(response.data[".expires"]);this.SatellizerStorage.set(tokenExpirationName,expirationTime)},service}])}]).run(["$auth","SatellizerConfig","SatellizerStorage","tokenExpirationName","$timeout","$window","$location",function($auth,$authProvider,$authStorage,tokenExpirationName,$timeout,$window,$location){var logOut=function(){$auth.logout(),$authStorage.remove(tokenExpirationName),$window.location.href=$location.protocol()+"://"+$location.host()+":"+$location.port()+"/account/logout"};$auth.isAuthenticated()&&$timeout(logOut,parseFloat($authStorage.get(tokenExpirationName))-Date.now())}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("cartController",["$rootScope","$scope","$timeout","cartService","catalogService",function($rootScope,$scope,$timeout,cartService,catalogService){function getCart(){$scope.cartIsUpdating=!0,cartService.getCart().then(function(response){var cart=response.data;cart.hasValidationErrors=_.some(cart.validationErrors)||_.some(cart.items,function(item){return _.some(item.validationErrors)}),$scope.cart=cart,$scope.cartIsUpdating=!1},function(response){$scope.cartIsUpdating=!1})}var timer;!function(){getCart()}(),$scope.setCartForm=function(form){$scope.formCart=form},$scope.changeLineItemQuantity=function(lineItemId,quantity){var lineItem=_.find($scope.cart.items,function(i){return i.id==lineItemId});if(!(!lineItem||quantity<1||$scope.cartIsUpdating||$scope.formCart.$invalid)){var initialQuantity=lineItem.quantity;lineItem.quantity=quantity,$timeout.cancel(timer),timer=$timeout(function(){$scope.cartIsUpdating=!0,cartService.changeLineItemQuantity(lineItemId,quantity).then(function(response){getCart(),$rootScope.$broadcast("cartItemsChanged")},function(response){lineItem.quantity=initialQuantity,$scope.cartIsUpdating=!1})},300)}},$scope.changeLineItemPrice=function(lineItemId,newPrice){_.find($scope.cart.items,function(i){return i.id==lineItemId})&&!$scope.cartIsUpdating&&($scope.cartIsUpdating=!0,cartService.changeLineItemPrice(lineItemId,newPrice).then(function(response){getCart(),$rootScope.$broadcast("cartItemsChanged")},function(response){$scope.cart.items=initialItems,$scope.cartIsUpdating=!1}))},$scope.removeLineItem=function(lineItemId){var lineItem=_.find($scope.cart.items,function(i){return i.id==lineItemId});if(lineItem&&!$scope.cartIsUpdating){$scope.cartIsUpdating=!0;var initialItems=angular.copy($scope.cart.items);$scope.recentCartItemModalVisible=!1,$scope.cart.items=_.without($scope.cart.items,lineItem),cartService.removeLineItem(lineItemId).then(function(response){getCart(),$rootScope.$broadcast("cartItemsChanged")},function(response){$scope.cart.items=initialItems,$scope.cartIsUpdating=!1})}},$scope.submitCart=function(){$scope.formCart.$setSubmitted(),$scope.formCart.$invalid||($scope.cart.hasPhysicalProducts,$scope.outerRedirect($scope.baseUrl+"cart/checkout"))},$scope.searchProduct=function(){$scope.productSearchResult=null,$scope.productSkuOrName&&($timeout.cancel(timer),timer=$timeout(function(){$scope.productSearchProcessing=!0;var criteria={keyword:$scope.productSkuOrName,start:0,pageSize:5};catalogService.search(criteria).then(function(response){$scope.productSearchProcessing=!1,$scope.productSearchResult=response.data.products},function(response){$scope.productSearchProcessing=!1})},300))},$scope.selectSearchedProduct=function(product){$scope.productSearchResult=null,$scope.selectedSearchedProduct=product,$scope.productSkuOrName=product.name},$scope.addProductToCart=function(product,quantity){$scope.cartIsUpdating=!0,cartService.addLineItem(product.id,quantity).then(function(response){getCart(),$scope.productSkuOrName=null,$scope.selectedSearchedProduct=null,$rootScope.$broadcast("cartItemsChanged")})}}]),storefrontApp.controller("cartBarController",["$scope","cartService",function($scope,cartService){function getCartItemsCount(){cartService.getCartItemsCount().then(function(response){$scope.cartItemsCount=response.data})}getCartItemsCount(),$scope.$on("cartItemsChanged",function(event,data){getCartItemsCount()})}]),storefrontApp.controller("recentlyAddedCartItemDialogController",["$scope","$window","$uibModalInstance","dialogData",function($scope,$window,$uibModalInstance,dialogData){$scope.$on("cartItemsChanged",function(event,data){dialogData.updated=!0}),$scope.dialogData=dialogData,$scope.close=function(){$uibModalInstance.close()},$scope.redirect=function(url){$window.location=url}}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.directive("vcContentPlace",["marketingService",function(marketingService){return{restrict:"E",link:function(scope,element,attrs){marketingService.getDynamicContent(attrs.id).then(function(response){element.html(response.data)})},replace:!0}}]),storefrontApp.directive("fallbackSrc",function(){return{link:function(scope,element,attrs){function errorHandler(event){element.attr("src")!==attrs.fallbackSrc?element.attr("src",attrs.fallbackSrc):element.off(event)}element.on("error",errorHandler),scope.$on("$destroy",function(){element.off("error",errorHandler)})}}});var storefrontApp=angular.module("storefrontApp");storefrontApp.component("vcErrors",{templateUrl:"themes/assets/errors.tpl.html",bindings:{message:"<",errors:"<"},controller:[function(){}]});var storefrontApp=angular.module("storefrontApp");storefrontApp.filter("imgurl",function(){return function(input,type){if(!type)return input;var extention="."+input.split(".").pop(),suffix="_"+type;return input.replace(extention,suffix+extention)}});var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("recentlyAddedListItemDialogController",["$scope","$window","$uibModalInstance","dialogData","listService","$translate",function($scope,$window,$uibModalInstance,dialogData,listService,$translate){$scope.availableLists=[],$scope.selectedList={},$scope.dialogData=dialogData,$scope.inProgress=!1,$scope.itemAdded=!1,$scope.addProductToList=function(){$scope.inProgress=!0,listService.addLineItem(dialogData.id,$scope.selectedList.name).then(function(response){response.data&&($scope.inProgress=!1,$scope.itemAdded=!0)})},$scope.selectList=function(list){$scope.selectedList=list},$scope.close=function(){$uibModalInstance.close()},$scope.redirect=function(url){$window.location=url},$scope.initialize=function(lists){$scope.lists=lists,angular.forEach($scope.lists,function(list){var titleKey="wishlist.general."+list.name+"_list_title",descriptionKey="wishlist.general."+list.name+"_list_description";$translate([titleKey,descriptionKey]).then(function(translations){list.title=translations[titleKey],list.description=translations[descriptionKey]},function(translationIds){list.title=translationIds[titleKey],list.description=translationIds[descriptionKey]}),listService.contains(dialogData.id,list.name).then(function(response){list.contains=response.data.contains})})}}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("mainController",["$rootScope","$scope","$location","$window","customerService","storefrontApp.mainContext",function($rootScope,$scope,$location,$window,customerService,mainContext){$scope.baseUrl={},$scope.$watch(function(){$scope.currentPath=$location.$$path.replace("/","")}),$rootScope.$on("storefrontError",function(event,data){$rootScope.storefrontNotification=data,$rootScope.storefrontNotification.detailsVisible=!1}),$rootScope.toggleNotificationDetails=function(){$rootScope.storefrontNotification.detailsVisible=!$rootScope.storefrontNotification.detailsVisible},$rootScope.closeNotification=function(){$rootScope.storefrontNotification=null},$scope.outerRedirect=function(absUrl){$window.location.href=absUrl},$scope.innerRedirect=function(path){$location.path(path),$scope.currentPath=$location.$$path.replace("/","")},$scope.stringifyAddress=function(address){var stringifiedAddress=address.firstName+" "+address.lastName+", ";return stringifiedAddress+=address.organization?address.organization+", ":"",stringifiedAddress+=address.countryName+", ",stringifiedAddress+=address.regionName?address.regionName+", ":"",stringifiedAddress+=address.city+" ",stringifiedAddress+=address.line1+", ",stringifiedAddress+=address.line2?address.line2:"",stringifiedAddress+=address.postalCode},$scope.getObjectSize=function(obj){var key,size=0;for(key in obj)obj.hasOwnProperty(key)&&size++;return size},mainContext.getCustomer=$scope.getCustomer=function(){customerService.getCurrentCustomer().then(function(response){var addressId=1;_.each(response.data.addresses,function(address){address.id=addressId,addressId++}),response.data.isContact="Contact"===response.data.memberType,mainContext.customer=$scope.customer=response.data})},$scope.getCustomer()}]).factory("storefrontApp.mainContext",function(){return{}});var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("orderController",["$scope","$window","orderService",function($scope,$window,orderService){!function(orderNumber){orderService.getOrder(orderNumber).then(function(response){response&&response.data&&($scope.order=response.data)})}($window.orderNumber)}]),angular.module("storefrontApp").directive("vaPermission",["authService",function(authService){return{link:function(scope,element,attrs){function toggleVisibilityBasedOnPermission(securityScopes){authService.checkPermission(permissionValue,securityScopes)?angular.element(element).show():angular.element(element).hide()}if(attrs.vaPermission){var permissionValue=attrs.vaPermission.trim();scope.$watch(attrs.securityScopes,function(value){value&&toggleVisibilityBasedOnPermission(value)}),toggleVisibilityBasedOnPermission(),scope.$on("loginStatusChanged",toggleVisibilityBasedOnPermission)}}}}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("productCompareListController",["$rootScope","$scope","$localStorage","$window","catalogService","dialogService",function($rootScope,$scope,$localStorage,$window,catalogService,dialogService){function formatNumber(number){var float=parseFloat(number);return isNaN(float)?number:float}$localStorage.productCompareList||($localStorage.productCompareList=[]),$scope.products=$localStorage.productCompareList,$scope.isInProductCompareList=function(productId){return _.some($localStorage.productCompareList,function(p){return p.id==productId})},$scope.addProductToCompareList=function(productId,event){event.preventDefault();var existingProduct=_.find($localStorage.productCompareList,function(p){return p.id===productId});return existingProduct?void dialogService.showDialog(existingProduct,"productCompareListDialogController","storefront.product-compare-list-dialog.tpl"):$window.productCompareListCapacity<=$localStorage.productCompareList.length?void dialogService.showDialog({capacityExceeded:!0},"productCompareListDialogController","storefront.product-compare-list-dialog.tpl"):void catalogService.getProduct([productId]).then(function(response){if(response.data&&response.data.length){var product=response.data[0];_.each(product.properties,function(property){property.productId=product.id,"number"===property.valueType.toLowerCase()&&(property.value=formatNumber(property.value))}),$localStorage.productCompareList.push(product),dialogService.showDialog(product,"productCompareListDialogController","storefront.product-compare-list-dialog.tpl"),$rootScope.$broadcast("productCompareListChanged")}})},$scope.getProductProperties=function(){var grouped={},properties=_.flatten(_.map($scope.products,function(product){return product.properties})),propertyDisplayNames=_.uniq(_.map(properties,function(property){return property.displayName}));_.each(propertyDisplayNames,function(displayName){grouped[displayName]=[];var props=_.where(properties,{displayName:displayName});_.each($scope.products,function(product){var productProperty=_.find(props,function(prop){return prop.productId===product.id});productProperty?grouped[displayName].push(productProperty):grouped[displayName].push({valueType:"ShortText",value:"-"})})}),$scope.properties=grouped},$scope.hasValues=function(properties,onlyDifferences){var uniqueValues=_.uniq(_.map(properties,function(p){return p.value}));return!(onlyDifferences&&properties.length>1&&1==uniqueValues.length)},$scope.clearCompareList=function(){$localStorage.productCompareList=[],$rootScope.$broadcast("productCompareListChanged"),$scope.products=$localStorage.productCompareList},$scope.removeProduct=function(product){$localStorage.productCompareList=_.without($localStorage.productCompareList,product),$scope.products=$localStorage.productCompareList,$rootScope.$broadcast("productCompareListChanged"),$scope.getProductProperties()}}]),storefrontApp.controller("productCompareListDialogController",["$scope","$window","dialogData","$uibModalInstance",function($scope,$window,dialogData,$uibModalInstance){$scope.dialogData=dialogData,$scope.close=function(){$uibModalInstance.close()},$scope.redirect=function(url){$window.location=url}}]),storefrontApp.controller("productCompareListBarController",["$scope","$localStorage",function($scope,$localStorage){$scope.itemsCount=$localStorage.productCompareList?$localStorage.productCompareList.length:0,$scope.$on("productCompareListChanged",function(event,data){$scope.itemsCount=$localStorage.productCompareList.length})}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("productListController",["$scope","$window","pricingService",function($scope,$window,pricingService){$scope.productListPricesLoaded=!1,$scope.productListPrices=[],pricingService.getActualProductPrices($window.productList).then(function(response){var prices=response.data;if(prices.length)for(var i=0;i<prices.length;i++)$scope.productListPrices[prices[i].productId]=prices[i];var productListPricesSize=$scope.getObjectSize($scope.productListPrices);$scope.productListPricesLoaded=productListPricesSize>0})}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("productController",["$rootScope","$scope","$window","dialogService","catalogService","cartService","quoteRequestService","customerService","listService",function($rootScope,$scope,$window,dialogService,catalogService,cartService,quoteRequestService,customerService,listService){function toDialogDataModel(product,quantity){return{imageUrl:product.primaryImage?product.primaryImage.url:null,listPrice:product.price.listPrice,id:product.id,listPriceWithTax:product.price.listPriceWithTax,name:product.name,placedPrice:product.price.actualPrice,placedPriceWithTax:product.price.actualPriceWithTax,quantity:quantity,updated:!1}}function getFlatternDistinctPropertiesMap(variations){var retVal={};return _.each(variations,function(variation){var propertyMap=getVariationPropertyMap(variation);_.each(_.keys(propertyMap),function(x){retVal[x]=_.uniq(_.union(retVal[x],propertyMap[x]),"value")})}),retVal}function getVariationPropertyMap(variation){return _.groupBy(variation.variationProperties,function(x){return x.displayName})}function getSelectedPropsMap(variationPropsMap){var retVal={};return _.each(_.keys(variationPropsMap),function(x){var property=_.find(variationPropsMap[x],function(y){return y.selected});property&&(retVal[x]=[property])}),retVal}function comparePropertyMaps(propMap1,propMap2){return _.every(_.keys(propMap1),function(x){var retVal=propMap2.hasOwnProperty(x);return retVal&&(retVal=propMap1[x][0].value==propMap2[x][0].value),retVal})}function findVariationBySelectedProps(variations,selectedPropMap){return _.find(variations,function(x){return comparePropertyMaps(getVariationPropertyMap(x),selectedPropMap)})}function compareProductInLists(productId){$scope.buttonInvalid=!0;var listNames=[{title:"shopping"},{title:"wish"}];angular.forEach(listNames,function(listName){listService.contains(productId,listName.title).then(function(result){result&&0==result.data.contains&&($scope.buttonInvalid=!1)})})}var allVariations=[];$scope.selectedVariation={},$scope.allVariationPropsMap={},$scope.productPrice=null,$scope.productPriceLoaded=!1,$scope.addProductToCart=function(product,quantity){var dialogData=toDialogDataModel(product,quantity);dialogService.showDialog(dialogData,"recentlyAddedCartItemDialogController","storefront.recently-added-cart-item-dialog.tpl"),cartService.addLineItem(product.id,quantity).then(function(response){$rootScope.$broadcast("cartItemsChanged")})},$scope.addProductToCartById=function(productId,quantity,event){event.preventDefault(),catalogService.getProduct([productId]).then(function(response){if(response.data&&response.data.length){var product=response.data[0];$scope.addProductToCart(product,quantity)}})},$scope.addProductToWishlist=function(product){var dialogData=toDialogDataModel(product,1);dialogService.showDialog(dialogData,"recentlyAddedListItemDialogController","storefront.recently-added-list-item-dialog.tpl")},$scope.addProductToActualQuoteRequest=function(product,quantity){var dialogData=toDialogDataModel(product,quantity);dialogService.showDialog(dialogData,"recentlyAddedActualQuoteRequestItemDialogController","storefront.recently-added-actual-quote-request-item-dialog.tpl"),quoteRequestService.addProductToQuoteRequest(product.id,quantity).then(function(response){$rootScope.$broadcast("actualQuoteRequestItemsChanged")})},$scope.checkProperty=function(property){_.each($scope.allVariationPropsMap[property.displayName],function(x){x.selected=x==property&&!x.selected}),$scope.selectedVariation=findVariationBySelectedProps(allVariations,getSelectedPropsMap($scope.allVariationPropsMap))},function(){var productIds=_.map($window.products,function(product){return product.id});productIds&&productIds.length&&catalogService.getProduct(productIds).then(function(response){var product=response.data[0];allVariations=[product].concat(product.variations||[]),$scope.allVariationPropsMap=getFlatternDistinctPropertiesMap(allVariations);var propertyMap=getVariationPropertyMap(product);_.each(_.keys(propertyMap),function(x){$scope.checkProperty(propertyMap[x][0])}),$scope.selectedVariation=product,compareProductInLists(product.id)})}()}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("quoteRequestController",["$rootScope","$scope","$window","$location","quoteRequestService","cartService",function($rootScope,$scope,$window,$location,quoteRequestService,cartService){function getQuoteRequest(number){quoteRequestService.getQuoteRequest(number).then(function(response){var quoteRequest=response.data;quoteRequest.billingAddress||($scope.customer.addresses.length?(quoteRequest.billingAddress=angular.copy($scope.customer.addresses[0]),quoteRequest.billingAddress.type="Billing",quoteRequest.billingAddress.countryCode&&getCountryRegions("Billing",quoteRequest.billingAddress.countryCode)):quoteRequest.billingAddress={firstName:$scope.customer.firstName,lastName:$scope.customer.lastName}),_.each(quoteRequest.items,function(quoteItem){var i=1;_.each(quoteItem.proposalPrices,function(tierPrice){tierPrice.id=i,quoteItem.selectedTierPrice.quantity==tierPrice.quantity&&(quoteItem.selectedTierPrice=tierPrice),i++})}),quoteRequest.requestShippingQuote=!0,$scope.quoteRequest=quoteRequest})}function getCountries(){cartService.getCountries().then(function(response){$scope.countries=response.data})}function getCountryRegions(addressType,countryCode){cartService.getCountryRegions(countryCode).then(function(response){var countryRegions=response.data;"Billing"==addressType&&($scope.billingCountryRegions=countryRegions||[]),"Shipping"==addressType&&($scope.shippingCountryRegions=countryRegions||[])})}function toFormModel(quoteRequest){var quoteRequestFormModel={id:quoteRequest.id,tag:quoteRequest.tag,status:quoteRequest.status,comment:quoteRequest.comment,billingAddress:quoteRequest.billingAddress,shippingAddress:quoteRequest.shippingAddress,items:[]};return _.each(quoteRequest.items,function(quoteItem){var quoteItemFormModel={id:quoteItem.id,comment:quoteItem.comment,selectedTierPrice:{price:quoteItem.selectedTierPrice.price.amount,quantity:quoteItem.selectedTierPrice.quantity},proposalPrices:[]};_.each(quoteItem.proposalPrices,function(tierPrice){quoteItemFormModel.proposalPrices.push({price:tierPrice.price.amount,quantity:tierPrice.quantity})}),quoteRequestFormModel.items.push(quoteItemFormModel)}),quoteRequestFormModel}!function(){var quoteRequestNumber=$location.url().replace("/","")||$window.currentQuoteRequestNumber;$scope.billingCountry=null,$scope.shippingCountry=null,getCountries(),quoteRequestNumber?getQuoteRequest(quoteRequestNumber):$scope.quoteRequest={itemsCount:0}}(),$scope.setQuoteRequestForm=function(form){$scope.formQuoteRequest=form},$scope.displayForStatuses=function(statuses){return _.contains(statuses,$scope.quoteRequest.status)},$scope.addTierPrice=function(quoteItem){quoteItem.proposalPrices.push({id:quoteItem.proposalPrices.length+1,price:quoteItem.salePrice,quantity:1})},$scope.changeTierPriceQuantity=function(tierPrice,quantity){quantity<1||quantity.isNaN||(tierPrice.quantity=quantity)},$scope.removeTierPrice=function(quoteItem,tierPrice){quoteItem.proposalPrices=_.without(quoteItem.proposalPrices,tierPrice)},$scope.removeProductFromQuoteRequest=function(quoteItem){var initialQuoteItems=angular.copy($scope.quoteRequest.items);$scope.quoteRequest.items=_.without($scope.quoteRequest.items,quoteItem),quoteRequestService.removeProductFromQuoteRequest($scope.quoteRequest.id,quoteItem.id).then(function(response){getQuoteRequest($scope.quoteRequest.id),$rootScope.$broadcast("actualQuoteRequestItemsChanged")},function(response){$scope.quoteRequest.items=initialQuoteItems})},$scope.setCountry=function(addressType,countryName){var country=_.find($scope.countries,function(c){return c.name==countryName});country&&("Billing"==addressType&&($scope.billingCountry=country,$scope.billingCountryRegions=[],$scope.quoteRequest.billingAddress.countryCode=country.code3||country.code2,$scope.quoteRequest.billingAddress.regionId=null,$scope.quoteRequest.billingAddress.regionName=null),"Shipping"==addressType&&($scope.shippingCountry=country,$scope.shippingCountryRegions=[],$scope.quoteRequest.shippingAddress.countryCode=country.code3||country.code2,$scope.quoteRequest.shippingAddress.regionId=null,$scope.quoteRequest.shippingAddress.regionName=null),country.code3&&getCountryRegions(addressType,country.code3))},$scope.setCountryRegion=function(addressType){if("Billing"==addressType){var countryRegion=_.find($scope.billingCountryRegions,function(r){return r.name==$scope.quoteRequest.billingAddress.regionName});if(!countryRegion)return;$scope.quoteRequest.billingAddress.regionId=countryRegion.code}if("Shipping"==addressType){var countryRegion=_.find($scope.shippingCountryRegions,function(r){return r.name==$scope.quoteRequest.shippingAddress.regionName});if(!countryRegion)return;$scope.quoteRequest.shippingAddress.regionId=countryRegion.code}},$scope.selectCustomerAddress=function(addressType){if("Billing"===addressType){var billingAddress=_.find($scope.customer.addresses,function(a){return a.id===$scope.quoteRequest.billingAddress.id});billingAddress&&(billingAddress.type="Billing",billingAddress.countryCode&&getCountryRegions("Billing",billingAddress.countryCode),$scope.quoteRequest.billingAddress=angular.copy(billingAddress))}if("Shipping"===addressType){var shippingAddress=_.find($scope.customer.addresses,function(a){return a.id===$scope.quoteRequest.shippingAddress.id});shippingAddress&&(shippingAddress.type="Shipping",shippingAddress.countryCode&&getCountryRegions("Shipping",shippingAddress.countryCode),$scope.quoteRequest.shippingAddress=angular.copy(shippingAddress))}},$scope.stringifyAddress=function(address){if(address){var stringifiedAddress=address.firstName+" "+address.lastName+", ";return stringifiedAddress+=address.organization?address.organization+", ":"",stringifiedAddress+=address.countryName+", ",stringifiedAddress+=address.regionName?address.regionName+", ":"",stringifiedAddress+=address.city+" ",stringifiedAddress+=address.line1+", ",stringifiedAddress+=address.line2?address.line2:"",stringifiedAddress+=address.postalCode}},$scope.submitQuoteRequest=function(){$scope.formQuoteRequest.$setSubmitted(),$scope.formQuoteRequest.$invalid||($scope.quoteRequest.billingAddress.email=$scope.quoteRequest.email,$scope.quoteRequest.shippingAddress&&($scope.quoteRequest.shippingAddress.email=$scope.quoteRequest.email),quoteRequestService.submitQuoteRequest($scope.quoteRequest.id,toFormModel($scope.quoteRequest)).then(function(response){$scope.customer.isRegisteredUser?$scope.outerRedirect($scope.baseUrl+"account/quoterequests"):$scope.outerRedirect($scope.baseUrl+"account/login")}))},$scope.rejectQuoteRequest=function(){quoteRequestService.rejectQuoteRequest($scope.quoteRequest.id).then(function(response){quoteRequestService.getQuoteRequest($scope.quoteRequest.id).then(function(response){$scope.quoteRequest=response.data})})},$scope.selectTierPrice=function(){quoteRequestService.getTotals($scope.quoteRequest.id,toFormModel($scope.quoteRequest)).then(function(response){$scope.quoteRequest.totals=response.data})},$scope.confirmQuoteRequest=function(){quoteRequestService.confirmQuoteRequest($scope.quoteRequest.id,toFormModel($scope.quoteRequest)).then(function(response){$scope.outerRedirect($scope.baseUrl+"cart/checkout/#/shipping-address")})},$scope.setRequestShippingQuote=function(){$scope.quoteRequest.requestShippingQuote||($scope.quoteRequest.shippingAddress=null)},$scope.setShippingAddressEqualsBilling=function(){$scope.quoteRequest.shippingAddressEqualsBilling&&($scope.quoteRequest.shippingAddress=angular.copy($scope.quoteRequest.billingAddress),$scope.quoteRequest.shippingAddress.type="Shipping",$scope.quoteRequest.shippingAddress.countryCode&&($scope.shippingCountry=$scope.billingCountry,getCountryRegions("Shipping",$scope.quoteRequest.shippingAddress.countryCode)))},$scope.tierPricesUnique=function(quoteItem){var quantities=_.map(quoteItem.proposalPrices,function(p){return p.quantity});return _.uniq(quantities).length==quoteItem.proposalPrices.length}}]),
storefrontApp.controller("actualQuoteRequestBarController",["$scope","quoteRequestService",function($scope,quoteRequestService){function getCurrentQuoteRequest(){quoteRequestService.getCurrentQuoteRequest().then(function(response){$scope.actualQuoteRequest=response.data})}getCurrentQuoteRequest(),$scope.$on("actualQuoteRequestItemsChanged",function(event,data){getCurrentQuoteRequest()})}]),storefrontApp.controller("recentlyAddedActualQuoteRequestItemDialogController",["$scope","$window","$uibModalInstance","dialogData",function($scope,$window,$uibModalInstance,dialogData){$scope.$on("actualQuoteRequestItemsChanged",function(event,data){dialogData.updated=!0}),$scope.dialogData=dialogData,$scope.close=function(){$uibModalInstance.close()},$scope.redirect=function(url){$window.location=url}}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("recommendationsController",["$scope","$timeout","recommendationService",function($scope,$timeout,recommendationService){$scope.isBlockVisible=!1,$scope.productListRecommendationsLoaded=!1,$scope.productListRecommendations=[],$scope.getRecommendations=function(evalContext){if(_.isString(evalContext.productIds))if(evalContext.productIds.match(",")){var values=evalContext.productIds.split(",");evalContext.productIds=values}else evalContext.productIds=[evalContext.productIds];recommendationService.getRecommendedProducts(evalContext).then(function(response){var products=response.data;if(products.length){for(var i=0;i<products.length;i++)$scope.productListRecommendations.push(products[i]);$scope.isBlockVisible=products.length>0}$scope.productListRecommendationsLoaded=!0})},$scope.startRecordInteraction=function(){$timeout(function(){window.startRecordInteraction()})}}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.controller("searchBarController",["$scope","$timeout","$window","catalogService",function($scope,$timeout,$window,catalogService){var timer;$scope.query=$window.searchQuery,$scope.getSuggestions=function(){$scope.query&&($timeout.cancel(timer),timer=$timeout(function(){$scope.searching=!0,$scope.categorySuggestions=[],$scope.productSuggestions=[];var searchCriteria={keyword:$scope.query,skip:0,take:$window.suggestionsLimit};catalogService.searchCategories(searchCriteria).then(function(response){var categories=response.data.categories;categories.length>5?(searchCriteria.take=$window.suggestionsLimit-5,$scope.categorySuggestions=_.first(categories,5)):(searchCriteria.take=$window.suggestionsLimit-categories.length,$scope.categorySuggestions=categories),catalogService.search(searchCriteria).then(function(response){var products=response.data.products;$scope.productSuggestions=products,$scope.searching=!1})})},300))}}]);var storefrontApp=angular.module("storefrontApp");storefrontApp.service("dialogService",["$uibModal",function($uibModal){return{showDialog:function(dialogData,controller,templateUrl){$uibModal.open({controller:controller,templateUrl:templateUrl,resolve:{dialogData:function(){return dialogData}}})}}}]),storefrontApp.service("feedbackService",["$http",function($http){return{postFeedback:function(data){return $http.post("storefrontapi/feedback",{model:data})}}}]),storefrontApp.service("customerService",["$http",function($http){return{getCurrentCustomer:function(){return $http.get("storefrontapi/account?t="+(new Date).getTime())}}}]),storefrontApp.service("marketingService",["$http",function($http){return{getDynamicContent:function(placeName){return $http.get("storefrontapi/marketing/dynamiccontent/"+placeName+"?t="+(new Date).getTime())}}}]),storefrontApp.service("pricingService",["$http",function($http){return{getActualProductPrices:function(products){return $http.post("storefrontapi/pricing/actualprices",{products:products})}}}]),storefrontApp.service("catalogService",["$http",function($http){return{getProduct:function(productIds){return $http.get("storefrontapi/products?productIds="+productIds+"&t="+(new Date).getTime())},search:function(criteria){return $http.post("storefrontapi/catalog/search",{searchCriteria:criteria})},searchCategories:function(criteria){return $http.post("storefrontapi/categories/search",{searchCriteria:criteria})}}}]),storefrontApp.service("cartService",["$http",function($http){return{getCart:function(){return $http.get("storefrontapi/cart?t="+(new Date).getTime())},getCartItemsCount:function(){return $http.get("storefrontapi/cart/itemscount?t="+(new Date).getTime())},addLineItem:function(productId,quantity){return $http.post("storefrontapi/cart/items",{id:productId,quantity:quantity})},changeLineItemQuantity:function(lineItemId,quantity){return $http.put("storefrontapi/cart/items",{lineItemId:lineItemId,quantity:quantity})},removeLineItem:function(lineItemId){return $http.delete("storefrontapi/cart/items?lineItemId="+lineItemId)},changeLineItemPrice:function(lineItemId,newPrice){return $http.put("storefrontapi/cart/items/price",{lineItemId:lineItemId,newPrice:newPrice})},clearCart:function(){return $http.post("storefrontapi/cart/clear")},getCountries:function(){return $http.get("storefrontapi/countries?t="+(new Date).getTime())},getCountryRegions:function(countryCode){return $http.get("storefrontapi/countries/"+countryCode+"/regions?t="+(new Date).getTime())},addCoupon:function(couponCode){return $http.post("storefrontapi/cart/coupons/"+couponCode)},removeCoupon:function(){return $http.delete("storefrontapi/cart/coupons")},addOrUpdateShipment:function(shipment){return $http.post("storefrontapi/cart/shipments",shipment)},addOrUpdatePayment:function(payment){return $http.post("storefrontapi/cart/payments",payment)},getAvailableShippingMethods:function(shipmentId){return $http.get("storefrontapi/cart/shipments/"+shipmentId+"/shippingmethods?t="+(new Date).getTime())},getAvailablePaymentMethods:function(){return $http.get("storefrontapi/cart/paymentmethods?t="+(new Date).getTime())},addOrUpdatePaymentPlan:function(plan){return $http.post("storefrontapi/cart/paymentPlan",plan)},removePaymentPlan:function(){return $http.delete("storefrontapi/cart/paymentPlan")},createOrder:function(bankCardInfo){return $http.post("storefrontapi/cart/createorder",{bankCardInfo:bankCardInfo})}}}]),storefrontApp.service("listService",["$http",function($http){return{getWishlist:function(listName){return $http.get("storefrontapi/lists/"+listName+"?t="+(new Date).getTime())},contains:function(productId,listName){return $http.get("storefrontapi/lists/"+listName+"/items/"+productId+"/contains?t="+(new Date).getTime())},addLineItem:function(productId,listName){return $http.post("storefrontapi/lists/"+listName+"/items",{productId:productId})},removeLineItem:function(lineItemId,listName){return $http.delete("storefrontapi/lists/"+listName+"/items/"+lineItemId)}}}]),storefrontApp.service("quoteRequestService",["$http",function($http){return{getCurrentQuoteRequest:function(){return $http.get("storefrontapi/quoterequest/current?t="+(new Date).getTime())},getQuoteRequest:function(number){return $http.get("storefrontapi/quoterequests/"+number+"?t="+(new Date).getTime())},getQuoteRequestItemsCount:function(number){return $http.get("storefrontapi/quoterequests/"+number+"/itemscount?t="+(new Date).getTime())},addProductToQuoteRequest:function(productId,quantity){return $http.post("storefrontapi/quoterequests/current/items",{productId:productId,quantity:quantity})},removeProductFromQuoteRequest:function(quoteRequestNumber,quoteItemId){return $http.delete("storefrontapi/quoterequests/"+quoteRequestNumber+"/items/"+quoteItemId)},submitQuoteRequest:function(quoteRequestNumber,quoteRequest){return $http.post("storefrontapi/quoterequests/"+quoteRequestNumber+"/submit",{quoteForm:quoteRequest})},rejectQuoteRequest:function(quoteRequestNumber){return $http.post("storefrontapi/quoterequests/"+quoteRequestNumber+"/reject")},updateQuoteRequest:function(quoteRequestNumber,quoteRequest){return $http.put("storefrontapi/quoterequests/"+quoteRequestNumber+"/update",{quoteRequest:quoteRequest})},getTotals:function(quoteRequestNumber,quoteRequest){return $http.post("storefrontapi/quoterequests/"+quoteRequestNumber+"/totals",{quoteRequest:quoteRequest})},confirmQuoteRequest:function(quoteRequestNumber,quoteRequest){return $http.post("storefrontapi/quoterequests/"+quoteRequestNumber+"/confirm",{quoteRequest:quoteRequest})}}}]),storefrontApp.service("recommendationService",["$http",function($http){return{getRecommendedProducts:function(requestData){return $http.post("storefrontapi/recommendations",requestData)}}}]),storefrontApp.service("orderService",["$http",function($http){return{getOrder:function(orderNumber){return $http.get("storefrontapi/orders/"+orderNumber+"?t="+(new Date).getTime())}}}]),$(function(){$(document).on("click.bs.dropdown.data-api",".dropdown-menu",function(e){e.stopPropagation()});$(document).on("mouseenter.bs.dropdown.data-api",'[data-toggle="dropdown"]:not([data-toggle-trigger="click"]):not([aria-expanded="true"])',$.fn.dropdown.Constructor.prototype.toggle),$(document).on("mouseleave.bs.dropdown.data-api",".dropdown",function(e){var dropdownToggle=$(e.target).parents(".dropdown").find('[data-toggle="dropdown"]:not([data-toggle-trigger="click"]):not([aria-expanded="false"])');dropdownToggle.length&&($.fn.dropdown.Constructor.prototype.toggle(e),dropdownToggle.blur())})});
//# sourceMappingURL=scripts.js.map
